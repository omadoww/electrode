{
  "name": "electrode-archetype-react-component",
  "version": "0.0.1",
  "description": "Archetype - Electrode Component",
  "repository": {
    "type": "git",
    "url": "https://github.com/walmartlabs/electrode-archetype-react-component.git"
  },
  "bugs": {
    "url": "https://github.com/walmartlabs/electrode-archetype-react-component/issues"
  },
  "homepage": "https://github.com/walmartlabs/electrode-archetype-react-component/README.md",
  "license": "UNLICENSED",
  "config": {
    "archetype": "node_modules/electrode-archetype-react-component"
  },
  "scripts": {
    "build": "builder run build-lib && builder run build-dist",
    "build-dist": "builder run clean-dist && builder run build-dist-min && builder run build-dist-dev",
    "build-dist-dev": "webpack --config ${npm_package_config_archetype}/config/webpack/webpack.config.dev.js --colors",
    "build-dist-min": "NODE_ENV=production webpack --config ${npm_package_config_archetype}/config/webpack/webpack.config.js --colors",
    "build-lib": "NODE_ENV=production builder run clean-lib && babel src -d lib && builder run build-lib:flatten-l10n && builder run build-lib:copy-flow && builder run build-lib:clean-tmp",
    "build-lib:clean-tmp": "rimraf lib/tmp",
    "build-lib:copy-flow": "node ${npm_package_config_archetype}/scripts/copy-as-flow-declaration.js",
    "build-lib:flatten-l10n": "node ${npm_package_config_archetype}/scripts/l10n/flatten-messages.js",
    "builder:check": "npm run builder:lint && npm run builder:test-dev-pkg && rm -rf test-init && npm run builder:test-init && npm run builder:test-init-pkg && rm -rf test-init",
    "builder:lint": "npm run builder:lint-server",
    "builder:lint-server": "eslint --color -c config/eslint/.eslintrc-node config/karma config/webpack demo-server",
    "builder:prepublish": "builder-support gen-dev",
    "builder:test-dev-pkg": "pjv -f dev/package.json",
    "builder:test-init": "builder-init `pwd` --prompts='{\"packageName\":\"test-init\",\"packageGitHubOrg\":\"electrode\",\"packageDescription\":\"test\",\"licenseDate\":\"2016\",\"licenseOrg\":\"WML\",\"destination\":\"test-init\"}'",
    "builder:test-init-pkg": "pjv -f test-init/package.json",
    "check": "builder run check-dep && builder run lint && builder run test-cov",
    "check-ci": "builder run check-dep && builder run lint && builder run test-ci",
    "check-cov": "builder run lint && builder run test-cov",
    "check-dep": "ecd -f package.json --cf ./${npm_package_config_archetype}/config/dependencies/check.json -w",
    "check-dev": "builder run lint && builder run test-dev",
    "clean": "builder run clean-lib && builder run clean-dist",
    "clean-dist": "rimraf dist",
    "clean-lib": "rimraf lib",
    "cov-frontend": "istanbul check-coverage 'coverage/client/*/coverage.json' --config=${npm_package_config_archetype}/config/istanbul/.istanbul.yml",
    "cov-frontend-50": "istanbul check-coverage 'coverage/client/*/coverage.json' --config=${npm_package_config_archetype}/config/istanbul/.istanbul.50.yml",
    "cov-frontend-70": "istanbul check-coverage 'coverage/client/*/coverage.json' --config=${npm_package_config_archetype}/config/istanbul/.istanbul.70.yml",
    "cov-frontend-85": "istanbul check-coverage 'coverage/client/*/coverage.json' --config=${npm_package_config_archetype}/config/istanbul/.istanbul.85.yml",
    "cov-frontend-95": "istanbul check-coverage 'coverage/client/*/coverage.json' --config=${npm_package_config_archetype}/config/istanbul/.istanbul.95.yml",
    "dev": "builder concurrent server-dev server-test",
    "dev-iso": "builder concurrent iso-render-server-start server-dev-iso",
    "hot": "builder concurrent server-hot server-test",
    "iso-render-server-start": "WEBPACK_DEV=true nodemon -w demo -w server -w src ${npm_package_config_archetype}/demo-server/index.js | bunyan -l warn",
    "lint": "builder concurrent lint-stylus lint-react-demo lint-react-src lint-react-test lint-scripts",
    "lint-react-demo": "eslint --ext .js,.jsx -c ./${npm_package_config_archetype}/config/eslint/.eslintrc-react-demo demo/*.jsx --color",
    "lint-react-src": "eslint --ext .js,.jsx -c ./${npm_package_config_archetype}/config/eslint/.eslintrc-react src --color",
    "lint-react-test": "eslint --ext .js,.jsx -c ./${npm_package_config_archetype}/config/eslint/.eslintrc-react-test test/client --color",
    "lint-scripts": "eslint --ext .js -c ./${npm_package_config_archetype}/config/eslint/.eslintrc-base scripts --color",
    "lint-stylus": "if [ -d src/styles ]; then stylint src/styles -c ./${npm_package_config_archetype}/config/stylint/.stylintrc; else echo 'Skipping Stylint as no src/styles directory'; fi",
    "npm:prepublish": "builder run build-lib && builder run build-dist-dev && builder run build-dist-min",
    "server-dev": "webpack-dev-server --port 4000 --config ${npm_package_config_archetype}/config/webpack/webpack.config.demo.dev.js --colors",
    "server-dev-iso": "webpack-dev-server --port 2992 --config ${npm_package_config_archetype}/config/webpack/webpack.config.demo.dev.js --colors",
    "server-hot": "webpack-dev-server --port 4000 --config ${npm_package_config_archetype}/config/webpack/webpack.config.demo.hot.js --colors",
    "server-test": "webpack-dev-server --port 3001 --config ${npm_package_config_archetype}/config/webpack/webpack.config.test.js --colors",
    "test-ci": "builder run test-frontend-ci",
    "test-cov": "builder run test-frontend-cov",
    "test-dev": "builder run test-frontend-dev",
    "test-frontend": "karma start ${npm_package_config_archetype}/config/karma/karma.conf.js --colors",
    "test-frontend-ci": "karma start --browsers PhantomJS,Firefox ${npm_package_config_archetype}/config/karma/karma.conf.coverage.js --colors",
    "test-frontend-cov": "karma start ${npm_package_config_archetype}/config/karma/karma.conf.coverage.js --colors",
    "test-frontend-dev": "karma start ${npm_package_config_archetype}/config/karma/karma.conf.dev.js --colors",
    "test-frontend-dev-watch": "karma start ${npm_package_config_archetype}/config/karma/karma.conf.watch.js --colors --browsers Chrome --no-single-run --auto-watch",
    "test-watch": "builder run test-frontend-dev-watch"
  },
  "dependencies": {},
  "devDependencies": {
    "builder-init": "^0.2.3",
    "builder-support": "0.0.1",
    "eslint": "^1.10.1",
    "eslint-config-defaults": "^9.0.0",
    "eslint-plugin-filenames": "^0.1.2",
    "package-json-validator": "^0.6.1"
  },
  "engines": {
    "node": "^4.2.6",
    "npm": "^3.5.3"
  }
}
